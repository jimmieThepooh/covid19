USE [covid19_db]
GO
/****** Object:  Table [dbo].[EMPLOYEE]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EMPLOYEE](
	[PERSON_ID] [varchar](20) NOT NULL,
	[FULLNAME] [varchar](255) NULL,
	[FIRSTNAME] [varchar](255) NULL,
	[LASTNAME] [varchar](255) NULL,
	[ORGDESC] [varchar](255) NULL,
	[JOBDESC] [varchar](255) NULL,
	[EMAIL] [varchar](50) NULL,
	[TEL] [varchar](50) NULL,
	[STARTDATE] [datetime] NULL,
	[ENDDATE] [datetime] NULL,
	[CREATED_DT] [datetime] NULL,
 CONSTRAINT [PK_EMPLOYEE] PRIMARY KEY CLUSTERED 
(
	[PERSON_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LUT_COVID_CAUSE]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LUT_COVID_CAUSE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DESCR] [nvarchar](50) NULL,
 CONSTRAINT [PK_LUT_COVID_CAUSE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LUT_COVID_COUNTRY]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LUT_COVID_COUNTRY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[COUNTRY_CODE] [nvarchar](10) NULL,
	[COUNTRY_SH_CODE] [nchar](2) NULL,
	[COUNTRY_NAME] [nvarchar](100) NULL,
	[COUNTRY_NAMT] [nvarchar](100) NULL,
	[DISPLAY_FLAG] [bit] NULL,
 CONSTRAINT [PK_LUT_COVID_COUNTRY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LUT_COVID_RELATION]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LUT_COVID_RELATION](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DESCR] [nvarchar](50) NULL,
 CONSTRAINT [PK_LUT_COVID_RELATION] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LUT_COVID_REPORTER]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LUT_COVID_REPORTER](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REPORTER] [nvarchar](50) NULL,
 CONSTRAINT [PK_LUT_COVID_REPORTER] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LUT_COVID_SYMTOM]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LUT_COVID_SYMTOM](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SYMTOM] [nvarchar](50) NULL,
 CONSTRAINT [PK_LUT_SYMTOM] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPT_COVID19EX]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPT_COVID19EX](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PERSON_ID] [nvarchar](20) NOT NULL,
	[REPORTER] [int] NULL,
	[TRAVEL_FLAG] [bit] NULL,
	[DEPARTURE_DT] [date] NULL,
	[DEPARTURE_FLIGHT] [nvarchar](10) NULL,
	[ARRIVAL_DT] [date] NULL,
	[ARRIVAL_FLIGHT] [nvarchar](10) NULL,
	[HAS_FLU] [nvarchar](10) NULL,
	[REPORT_DT] [datetime] NULL,
	[TRAVEL_REASON] [int] NULL,
	[HAS_FLU_OTHER] [nvarchar](10) NULL,
	[COMPANION_NAME1] [nvarchar](100) NULL,
	[COMPANION_RELATION1] [nvarchar](100) NULL,
	[COMPANION_NAME2] [nvarchar](100) NULL,
	[COMPANION_RELATION2] [nvarchar](100) NULL,
	[COMPANION_NAME3] [nvarchar](100) NULL,
	[COMPANION_RELATION3] [nvarchar](100) NULL,
	[TRAVEL_TOGETHER] [bit] NULL,
	[TEMPERATURE] [decimal](3, 1) NULL,
	[CREATED_DT] [datetime] NULL,
	[TEMPERATURE_OTHER] [decimal](3, 1) NULL,
 CONSTRAINT [PK_RPT_COVID19_OUTSOURCE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPT_COVID19EX_COUNTRY]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPT_COVID19EX_COUNTRY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REPORTER_ID] [int] NOT NULL,
	[COUNTRY_ID] [int] NULL,
	[PERSON_TYPE_ID] [int] NULL,
 CONSTRAINT [PK_RPT_COVID19EX_COUNTRY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPT_COVID19EX_SYMTOMS]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPT_COVID19EX_SYMTOMS](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REPORTER_ID] [int] NOT NULL,
	[SYMTOMS_ID] [int] NULL,
	[PERSON_TYPE_ID] [int] NULL,
 CONSTRAINT [PK_RPT_COVID19EX_SYMTOMS] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[RPT_COVID19EX_SYMTOMS_OTHER]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[RPT_COVID19EX_SYMTOMS_OTHER](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REPORTER_ID] [int] NOT NULL,
	[SYMTOMS_ID] [int] NULL,
	[PERSON_TYPE_ID] [int] NULL,
 CONSTRAINT [PK_RPT_COVID19EX_SYMTOMS_OTHER] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[RPT_COVID19EX_COUNTRY]  WITH CHECK ADD  CONSTRAINT [FK__RPT_COVIDEX__REPOR__361203C5] FOREIGN KEY([REPORTER_ID])
REFERENCES [dbo].[RPT_COVID19EX] ([ID])
GO
ALTER TABLE [dbo].[RPT_COVID19EX_COUNTRY] CHECK CONSTRAINT [FK__RPT_COVIDEX__REPOR__361203C5]
GO
ALTER TABLE [dbo].[RPT_COVID19EX_SYMTOMS]  WITH CHECK ADD  CONSTRAINT [FK__RPT_COVIDEX__REPOR__3429BB53] FOREIGN KEY([REPORTER_ID])
REFERENCES [dbo].[RPT_COVID19EX] ([ID])
GO
ALTER TABLE [dbo].[RPT_COVID19EX_SYMTOMS] CHECK CONSTRAINT [FK__RPT_COVIDEX__REPOR__3429BB53]
GO
ALTER TABLE [dbo].[RPT_COVID19EX_SYMTOMS_OTHER]  WITH CHECK ADD  CONSTRAINT [FK__RPT_COVIDEX__REPOR__351DDF8C] FOREIGN KEY([REPORTER_ID])
REFERENCES [dbo].[RPT_COVID19EX] ([ID])
GO
ALTER TABLE [dbo].[RPT_COVID19EX_SYMTOMS_OTHER] CHECK CONSTRAINT [FK__RPT_COVIDEX__REPOR__351DDF8C]
GO
/****** Object:  StoredProcedure [dbo].[RPT_COVID19_DAILY]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sirinrat (migrate)
-- Create date: 18/3/2563
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[RPT_COVID19_DAILY]
	-- Add the parameters for the stored procedure here
	-- @pBranch_code nvarchar(20),
	@pType int , --1=ประจำวัน , 2= สรุป
	@START_DT DATE = null,
	@END_DT	DATE = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @REPORT_NUM INT
	DECLARE @TRAVEL_NUM INT

	IF (@pType = 1) --1=ประจำวัน
	BEGIN
		--หาจำนวนผู้ที่รายงาน
		SELECT @REPORT_NUM=COUNT(*)
		FROM 
		(SELECT RC.PERSON_ID 
		FROM RPT_COVID19EX RC
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE CAST(RC.REPORT_DT AS DATE) = CAST(GETDATE() AS DATE)
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RC.PERSON_ID) DATA

		SELECT @TRAVEL_NUM=COUNT(*)
		FROM (SELECT DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
				FROM RPT_COVID19EX RC2
				LEFT JOIN 
					(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
					FROM RPT_COVID19EX RC2
					GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
				WHERE RC2.CREATED_DT = MRC.CREATED_DT) RC
		LEFT JOIN LUT_COVID_REPORTER LR ON RC.REPORTER = LR.ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE CAST(RC.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RC.REPORTER , LR.REPORTER  

		-- หาจำนวนผู้เดินทางตาม type
		IF @TRAVEL_NUM > 0 
			SELECT @REPORT_NUM AS REPORT_NUM ,RC.REPORTER AS ID , LR.REPORTER AS LABEL, COUNT(*) AS AMOUNT
			FROM (SELECT DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.CREATED_DT = MRC.CREATED_DT) RC
			LEFT JOIN LUT_COVID_REPORTER LR ON RC.REPORTER = LR.ID
			LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
			WHERE CAST(RC.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
			AND RC.TRAVEL_FLAG = 1
			-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
			GROUP BY RC.REPORTER , LR.REPORTER 
		ELSE 
			SELECT @REPORT_NUM AS REPORT_NUM , LC.ID AS ID , LC.REPORTER AS LABEL , 0 AS AMOUNT
			FROM LUT_COVID_REPORTER LC


	END
	ELSE --2= สรุป
	BEGIN
		--หาจำนวนผู้ที่รายงาน
		SELECT @REPORT_NUM=COUNT(*)
		FROM 
		(SELECT RC.PERSON_ID 
		FROM RPT_COVID19EX RC
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RC.PERSON_ID) DATA

		SELECT @TRAVEL_NUM=COUNT(*)
		FROM (SELECT DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
				FROM RPT_COVID19EX RC2
				LEFT JOIN 
					(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
					FROM RPT_COVID19EX RC2
					WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
					GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
				WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN LUT_COVID_REPORTER LR ON RC.REPORTER = LR.ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RC.REPORTER , LR.REPORTER 
		-- หาจำนวนผู้เดินทางตาม type
		IF @TRAVEL_NUM > 0 
		SELECT @REPORT_NUM AS REPORT_NUM ,RC.REPORTER AS ID , LR.REPORTER AS LABEL, COUNT(*) AS AMOUNT
		FROM (SELECT DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
				FROM RPT_COVID19EX RC2
				LEFT JOIN 
					(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
					FROM RPT_COVID19EX RC2
					WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
					GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
				WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN LUT_COVID_REPORTER LR ON RC.REPORTER = LR.ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RC.REPORTER , LR.REPORTER 
		ELSE 
			SELECT @REPORT_NUM AS REPORT_NUM , LC.ID AS ID , LC.REPORTER AS LABEL , 0 AS AMOUNT
			FROM LUT_COVID_REPORTER LC
	END

END
GO
/****** Object:  StoredProcedure [dbo].[RPT_COVID19_DAILY_COUNTRY]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sirinrat (migrate)
-- Create date: 18/3/2563
-- Description:	สำหรับหาประเทศที่ไป
-- =============================================
CREATE PROCEDURE [dbo].[RPT_COVID19_DAILY_COUNTRY]
	-- Add the parameters for the stored procedure here
	-- @pBranch_code nvarchar(20),
	@pType int , --1=ประจำวัน , 2= สรุป
	@START_DT DATE = null,
	@END_DT	DATE = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	IF @pType = 1
		SELECT RCC.COUNTRY_ID , LCC.COUNTRY_NAMT AS LABEL, RCC.PERSON_TYPE_ID , COUNT(*) AMOUNT
		FROM (SELECT DISTINCT RC2.ID , RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN RPT_COVID19EX_COUNTRY RCC ON RC.ID = RCC.REPORTER_ID
		LEFT JOIN LUT_COVID_COUNTRY LCC ON LCC.ID = RCC.COUNTRY_ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE CAST(RC.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
		AND LCC.COUNTRY_NAMT IS NOT NULL
		AND RCC.PERSON_TYPE_ID IS NOT NULL
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RCC.COUNTRY_ID , PERSON_TYPE_ID , LCC.COUNTRY_NAMT 
		ORDER BY PERSON_TYPE_ID , COUNT(*) DESC
	ELSE 
		SELECT RCC.COUNTRY_ID , LCC.COUNTRY_NAMT AS LABEL, RCC.PERSON_TYPE_ID , COUNT(*) AMOUNT
		FROM (SELECT DISTINCT RC2.ID , RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN RPT_COVID19EX_COUNTRY RCC ON RC.ID = RCC.REPORTER_ID
		LEFT JOIN LUT_COVID_COUNTRY LCC ON LCC.ID = RCC.COUNTRY_ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		AND LCC.COUNTRY_NAMT IS NOT NULL
		AND RCC.PERSON_TYPE_ID IS NOT NULL
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RCC.COUNTRY_ID , PERSON_TYPE_ID , LCC.COUNTRY_NAMT 
		ORDER BY PERSON_TYPE_ID , COUNT(*) DESC

END
GO
/****** Object:  StoredProcedure [dbo].[RPT_COVID19_DAILY_FLU]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sirinrat (migrate)
-- Create date: 18/3/2563
-- Description:	สำหรับหาอาการไข้
-- =============================================
CREATE PROCEDURE [dbo].[RPT_COVID19_DAILY_FLU]
	-- Add the parameters for the stored procedure here
	-- @pBranch_code nvarchar(20),
	@pType int , --1=ประจำวัน , 2= สรุป
	@START_DT DATE = null,
	@END_DT	DATE = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	IF @pType=1
		SELECT REPORTER AS PERSON_TYPE_ID , HAS_FLU AS LABEL , COUNT(*) AS AMOUNT
		FROM (SELECT DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT , RC2.HAS_FLU
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE CAST(RC.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		AND RC.TRAVEL_FLAG = 1
		GROUP BY REPORTER ,HAS_FLU
		ORDER BY REPORTER , HAS_FLU
	ELSE 
		SELECT REPORTER AS PERSON_TYPE_ID , HAS_FLU AS LABEL , COUNT(*) AS AMOUNT
		FROM (SELECT  DISTINCT RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT , RC2.HAS_FLU
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.CREATED_DT = MRC.CREATED_DT)  RC
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		AND RC.TRAVEL_FLAG = 1
		GROUP BY REPORTER ,HAS_FLU
		ORDER BY REPORTER , HAS_FLU
END
GO
/****** Object:  StoredProcedure [dbo].[RPT_COVID19_DAILY_FLU_DETAIL]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sirinrat (migrate)
-- Create date: 18/3/2563
-- Description:	สำหรับหาอาการไข้
-- =============================================
CREATE PROCEDURE [dbo].[RPT_COVID19_DAILY_FLU_DETAIL]
	-- Add the parameters for the stored procedure here
	-- @pBranch_code nvarchar(20),
	@pType int , --1=ประจำวัน , 2= สรุป
	@START_DT DATE = null,
	@END_DT	DATE = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	IF @pType=1
		SELECT DISTINCT RC2.PERSON_ID , ME.FULLNAME , RC2.REPORTER AS PERSON_TYPE_ID -- , LB.BRANCH_SH_NAMT
		, RC2.REPORT_DT , RC2.HAS_FLU
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					LEFT JOIN EMPLOYEE ME ON ME.PERSON_ID = RC2.PERSON_ID
					-- LEFT JOIN LUT_BRANCH LB ON LB.BRANCH_CODE = ME.BRANCH_CODE
					WHERE RC2.CREATED_DT = MRC.CREATED_DT
					AND HAS_FLU = 'มีไข้'
					AND CAST(RC2.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
					-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
	ELSE 
		SELECT  DISTINCT RC2.PERSON_ID , ME.FULLNAME , RC2.REPORTER AS PERSON_TYPE_ID -- , LB.BRANCH_SH_NAMT
		, RC2.REPORT_DT , RC2.HAS_FLU
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(CREATED_DT) CREATED_DT
						FROM RPT_COVID19EX RC2
						WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					LEFT JOIN EMPLOYEE ME ON ME.PERSON_ID = RC2.PERSON_ID
					-- LEFT JOIN LUT_BRANCH LB ON LB.BRANCH_CODE = ME.BRANCH_CODE
					WHERE RC2.CREATED_DT = MRC.CREATED_DT
					AND HAS_FLU = 'มีไข้'
					-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
					
END
GO
/****** Object:  StoredProcedure [dbo].[RPT_COVID19_DAILY_SYMTOM]    Script Date: 3/18/2020 12:43:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sirinrat (migrate)
-- Create date: 18/3/2563
-- Description:	สำหรับหาอาการ
-- =============================================
CREATE PROCEDURE [dbo].[RPT_COVID19_DAILY_SYMTOM]
	-- Add the parameters for the stored procedure here
	-- @pBranch_code nvarchar(20),
	@pType int , --1=ประจำวัน , 2= สรุป
	@START_DT DATE = null,
	@END_DT	DATE = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	IF @pType = 1
		SELECT RCC.SYMTOMS_ID , LCC.SYMTOM as LABEL, RCC.PERSON_TYPE_ID , COUNT(*) AMOUNT
		FROM (SELECT DISTINCT RC2.ID,RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT 
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(REPORT_DT) REPORT_DT
						FROM RPT_COVID19EX RC2
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.REPORT_DT = MRC.REPORT_DT)  RC
		LEFT JOIN RPT_COVID19EX_SYMTOMS RCC ON RC.ID = RCC.REPORTER_ID
		LEFT JOIN LUT_COVID_SYMTOM LCC ON LCC.ID = RCC.SYMTOMS_ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE CAST(RC.REPORT_DT AS DATE)  = CAST(GETDATE() AS DATE)
		AND LCC.SYMTOM IS NOT NULL
		AND RCC.PERSON_TYPE_ID IS NOT NULL
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RCC.SYMTOMS_ID , PERSON_TYPE_ID , LCC.SYMTOM
		ORDER BY PERSON_TYPE_ID , SYMTOMS_ID 
	ELSE
			SELECT RCC.SYMTOMS_ID , LCC.SYMTOM as LABEL, RCC.PERSON_TYPE_ID , COUNT(*) AMOUNT
		FROM (SELECT DISTINCT RC2.ID,RC2.PERSON_ID , RC2.REPORTER , rc2.TRAVEL_FLAG , RC2.CREATED_DT , RC2.REPORT_DT 
					FROM RPT_COVID19EX RC2
					LEFT JOIN 
						(SELECT PERSON_ID , REPORTER , MAX(REPORT_DT) REPORT_DT
						FROM RPT_COVID19EX RC2
						WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC2.REPORT_DT))) and
						(@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC2.REPORT_DT)))
						GROUP BY PERSON_ID , REPORTER) MRC ON RC2.PERSON_ID = MRC.PERSON_ID AND RC2.REPORTER = MRC.REPORTER
					WHERE RC2.REPORT_DT = MRC.REPORT_DT)  RC
		LEFT JOIN RPT_COVID19EX_SYMTOMS RCC ON RC.ID = RCC.REPORTER_ID
		LEFT JOIN LUT_COVID_SYMTOM LCC ON LCC.ID = RCC.SYMTOMS_ID
		LEFT JOIN EMPLOYEE ME ON RC.PERSON_ID = ME.PERSON_ID
		WHERE (@START_DT is null or (@START_DT is not null and @START_DT <= CONVERT (date, RC.REPORT_DT))) and
		 (@END_DT  is null or (@END_DT is not null and @END_DT >= CONVERT (date, RC.REPORT_DT)))
		AND LCC.SYMTOM IS NOT NULL
		AND RCC.PERSON_TYPE_ID IS NOT NULL
		AND RC.TRAVEL_FLAG = 1
		-- AND (ME.BRANCH_CODE = @pBranch_code OR @pBranch_code IS NULL)
		GROUP BY RCC.SYMTOMS_ID , PERSON_TYPE_ID , LCC.SYMTOM
		ORDER BY PERSON_TYPE_ID , SYMTOMS_ID 
	
	


END
GO
